NAME='linux-kernel-soraka'
VERSION='5.4'
DIRECTORY=''
#DEPENDENCIES='firmware-mt8371-8438.B wireless-regdb-2022-02-18 vboot-utils-R101-14588.B uboot-tools-2022.04 openssl-1.1.1n kmod-29'
DEPENDENCIES='wireless-regdb-2022-02-18 openssl-1.1.1n kmod-29 elfutils-0.186 diffutils-3.8 zlib-1.2.11'
FILENAME="linux-kernel-soraka-5.4.tar.gz"
SOURCE="https://chromium.googlesource.com/chromiumos/third_party/kernel/+archive/refs/heads/chromeos-5.4.tar.gz"

build() {

	#this one is wrong! its not pineview
	cat chromeos/config/base.config chromeos/config/x86_64/common.config chromeos/config/x86_64/chromeos-intel-pineview.flavour.config > .config

	cat <<-EOF | tee -a .config
	CONFIG_VT=y
	CONFIG_CONSOLE_TRANSLATIONS=y
	CONFIG_VT_CONSOLE=y
	CONFIG_VT_CONSOLE_SLEEP=y
	CONFIG_HW_CONSOLE=y
	CONFIG_VT_HW_CONSOLE_BINDING=y
	CONFIG_FB_DEFERRED_IO=y
	CONFIG_FB_SIMPLE=y
	CONFIG_DUMMY_CONSOLE=y
	CONFIG_FRAMEBUFFER_CONSOLE=y
	CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y
	CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=n
	CONFIG_GOOGLE_FRAMEBUFFER_COREBOOT=y
	CONFIG_DRM_FBDEV_EMULATION=y
	CONFIG_ERROR_ON_WARNING=n
	CONFIG_BLK_DEV_INITRD=n
	CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
	CONFIG_ARM_MEDIATEK_CPUFREQ_HW=y
	CONFIG_DUMMY_CONSOLE_COLUMNS=170
	CONFIG_DUMMY_CONSOLE_ROWS=48
	CONFIG_DRM_SIMPLEDRM=y
	CONFIG_MWIFIEX=y
	CONFIG_MWIFIEX_SDIO=y
	CONFIG_CFG80211=y
	CONFIG_SECURITY_CHROMIUMOS=n
	#CONFIG_EXTRA_FIRMWARE="mrvl/sd8897_uapsta.bin"
	#CONFIG_EXTRA_FIRMWARE_DIR="/lib/firmware"
	EOF

	make olddefconfig
	make prepare

	#make -j$(nproc) Image modules
	#make M=fs/cifs
	make -j$(nproc)
	#make dtbs

	exit

	cp scripts/dtc/dtc /bin	

	chromeos/scripts/generate-its-script.sh -a arm64 arch/arm64/boot/Image arch/arm64/boot/dts/mediatek/*.dtb > kernel.its
	mkimage -D "-I dts -O dtb -p 2048" -f kernel.its vmlinux.uimg

	dd if=/dev/zero of=bootloader.bin bs=512 count=1
	echo "console=tty1 init=/sbin/init root=PARTUUID=%U/PARTNROFF=1 rootwait rw noinitrd" > cmdline

	vbutil_kernel --pack vmlinux.kpart --version 1 --vmlinuz vmlinux.uimg --arch aarch64 --keyblock /share/vboot/devkeys/kernel.keyblock \
	--signprivate /share/vboot/devkeys/kernel_data_key.vbprivk --config cmdline --bootloader bootloader.bin
}

package() {
	#mkdir -p $DESTDIR/lib/modules
	#ln -s $DESTDIR/lib/modules /lib/modules

	make INSTALL_MOD_PATH="$DESTDIR" modules_install
	#make INSTALL_HDR_PATH="$DESTDIR/usr" headers_install
	#make INSTALL_DTBS_PATH="$DESTDIR/boot/dtbs" dtbs_install
	rm -f $DESTDIR/lib/modules/*/{source,build}
	mkdir -p $DESTDIR/boot
	cp vmlinux.kpart $DESTDIR/boot
}
